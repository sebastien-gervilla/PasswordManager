@page "/login"
@inject HttpClient Http
@inject NavigationManager Navigation
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<h3>Login</h3>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="alert alert-danger">@ErrorMessage</div>
}

<div class="login-container">
    <input @bind="LoginModel.Email" placeholder="Email" />
    <input @bind="LoginModel.Password" type="password" placeholder="Password" />
    <button @onclick="SumbitLogin">Login</button>
</div>

@code {
    private LoginRequest LoginModel = new();
    private string? ErrorMessage;

    private async Task SumbitLogin()
    {
        ErrorMessage = null;

        var response = await Http.PostAsJsonAsync("/api/auth/login", LoginModel);

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<LoginResponse>();
            await localStorage.SetItemAsync("authToken", result?.Token);
            Navigation.NavigateTo("/");
        }
        else
        {
            ErrorMessage = "Invalid email or password.";
        }
    }

    public class LoginRequest
    {
        public string Email { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }

    public class LoginResponse
    {
        public string Token { get; set; } = string.Empty;
    }
}